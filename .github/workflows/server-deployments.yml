name: Deploy Services
on:
  push:
    branches:
      - develop
      - main
    paths:
      - lambda/**
      - libs/**
    
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  check_dependency_change:
    runs-on: ubuntu-latest
    # Declare outputs for next jobs
    outputs:
      deps_changed: ${{ steps.check_file_changed.outputs.deps_changed }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: check_file_changed
      run: |
        if [[ $(git diff --name-only HEAD^ HEAD | grep lambda/services/package.json) ]] || [[ $(git diff --name-only HEAD^ HEAD | grep libs/) ]]; then
          echo "deps_changed=True" >> $GITHUB_OUTPUT
        else
          echo "deps_changed=False" >> $GITHUB_OUTPUT
        fi
  layer:
    name: layer
    runs-on: ubuntu-latest
    needs: check_dependency_change
    steps:
      - name: check_file_changed
        run: |
          echo ${{needs.check_dependency_change.outputs.deps_changed}}
          echo ${{needs.check_dependency_change.outputs}}
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build Serial Generator Package
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' }}
        working-directory: ./libs/serial-number-gen
        run: yarn run build
      - name: Build Carbon Credit Package
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' }}
        working-directory: ./libs/carbon-credit-calculator
        run: yarn run build
      - name: Copy package.json
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' }}
        working-directory: ./lambda/layer/dependency_layer
        run: cp ../../services/package.json ./ && cp ../../services/yarn.lock ./ && cp -r ../../../libs ../../
      - name: Install Dependency
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' }}
        working-directory: ./lambda/layer/dependency_layer
        run: yarn install --production --frozen-lockfile
      # - name: Copy Dependency
      #   if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' }}
      #   working-directory: ./lambda/layer
      #   run: |
      #     cp -r node_modules ./dependency_layer
      #     ls
      - name: serverless deploy develop
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' && github.ref == 'refs/heads/develop'}}
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/layer && serverless deploy --stage dev"
          entrypoint: /bin/sh
      - name: serverless deploy main
        if: ${{ needs.check_dependency_change.outputs.deps_changed == 'True' && github.ref == 'refs/heads/main'}}
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/layer && serverless deploy --stage prod"
          entrypoint: /bin/sh
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: [layer]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependency
        working-directory: ./lambda/services
        run: yarn install --frozen-lockfile
      - name: version
        run: |
          echo "ARN1=$(aws lambda list-layer-versions --layer-name service-dependencies-1 --region us-east-1 --query 'LayerVersions[0].LayerVersionArn')" >> $GITHUB_OUTPUT
          echo "ARN2=$(aws lambda list-layer-versions --layer-name service-dependencies-2 --region us-east-1 --query 'LayerVersions[0].LayerVersionArn')" >> $GITHUB_OUTPUT
        id: layerArn
      - name: Build Serial Generator Package
        working-directory: ./libs/serial-number-gen
        run: yarn run build
      - name: Build Carbon Credit Package
        working-directory: ./libs/carbon-credit-calculator
        run: yarn run build
      - name: serverless deploy develop
        if: github.ref == 'refs/heads/develop'
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/services && serverless deploy --stage dev --param='depLayerArn1=${{ steps.layerArn.outputs.ARN1 }}' --param='depLayerArn2=${{ steps.layerArn.outputs.ARN2 }}'"
          entrypoint: /bin/sh
      - name: serverless deploy main
        if: github.ref == 'refs/heads/main'
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/services && serverless deploy --stage prod"
          entrypoint: /bin/sh

  automated-api-tests:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v3
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run User Create Tests
        if: always()
        run: |
          postman collection run "20428472-45dd524a-c260-44f4-b9c9-5f164db2264d" -e "20428472-778eb1c8-aac1-4484-a217-bcfd9a8d0df0" -d ./testing/api/user_onboarding_company4.csv
      - name: Run User Password Reset Tests
        if: always()
        run: |
          postman collection run "24647866-ba48ade2-732f-40c5-a304-509b44389ff6" -e "20428472-778eb1c8-aac1-4484-a217-bcfd9a8d0df0" -d ./testing/api/reset_password_3.csv
      - name: Run User View Tests
        if: always()
        run: |
          postman collection run "20428472-a9ecb4af-70a2-4997-a478-e554138ec3ea" -e "20428472-778eb1c8-aac1-4484-a217-bcfd9a8d0df0" -d ./testing/api/view_user_company3.csv
      - name: Run Programme Create Tests
        if: always()
        run: |
          postman collection run "24716950-471a5534-87f8-482d-93e2-6613e15d55e0" -e "20428472-778eb1c8-aac1-4484-a217-bcfd9a8d0df0" -d ./testing/api/create_project_7.csv
      - name: Run Programme Authorisation and Credit Transfer Tests
        if: always()
        run: |
          postman collection run "20428472-140d1d13-d387-4952-b956-a1a5ff7b01af" -e "20428472-778eb1c8-aac1-4484-a217-bcfd9a8d0df0" -d ./testing/api/credit_transfer_1.csv
      - name: Run Programme Certification and Certification Revocation Tests
        if: always()
        run: |
          postman collection run "20428472-d4e57d08-53ad-42a5-ba0e-3e85f449a1ed" -e "20428472-778eb1c8-aac1-4484-a217-bcfd9a8d0df0" -d ./testing/api/credit_transfer_certify_1.csv
          
          
          
          
          